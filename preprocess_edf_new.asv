
%% Load data
load('edf1_part.mat');

%% eye movement filtering
x = edf1_part.posX(250:end); % x value
y = edf1_part.posY(250:end);

% find all the nan values
x(x > 750 |x <450) = NaN;
y(y > 600 |y <200) = NaN;
[r, ~] = find(isnan(y) | isnan(x)); 

% find the starts and stops of each blink and length 
blink_index = find((diff(r) ~= 1)==1);
nan_onset = blink_index(1:end)+1; nan_onset = [1; nan_onset(1:end-1)];
nan_offset= blink_index(1:end)-1;
blink_length = r(nan_offset) - r(nan_onset)+1;

% Interpolation
for i = 1:length(blink_length)
    if rem(blink_length(i),2)==0 % if the length is even
        l=blink_length(i)/2;
        onset = r(nan_onset(i))-2;
        offset= r(nan_offset(i))+2;
        x(onset:(onset+l))   = x(onset-1);
        x(onset+l+1:offset) = x(offset+1);
        y(onset:(onset+l))   = y(onset-1);
        y(onset+l+1:offset) = y(offset+1);
        
    else
        l=(blink_length(i)-1)/2;
        onset  = r(nan_onset(i))-2;
        offset = r(nan_offset(i))+2;
        x(onset:onset+l+1)   = x(onset-1);
        x(onset+l+2:offset) = x(offset+1);
        y(onset:onset+l+1)   = y(onset-1);
        y(onset+l+2:offset) = y(offset+1);

    end
end 


%% Pupil size filtering 
pupil = edf1_part.pupilSize(250:end);
pupil(pupil < 1000) = NaN;

inn = ~isnan(pupil);
i1 = (1:numel(pupil)).';
pp = interp1(i1(inn),pupil(inn),'linear','pp');
out = fnval(pp,linspace(i1(1),i1(end),1000));


%% Downsize x and y to 60 movements per second
downX = resample(x, 1000, 60);
downY = resample(y, 1000, 60);

%% figure
f = figure('Name','Removing Blinks Eye movement'); f.Position=[10 10 1000 500];
subplot(3,4,1)
plot(edf1_part.posX); xlabel('time (ms)'); ylabel('x location'); title('Horizontal location - raw'); ylim([400 800]);

subplot(3,4,2)
plot(downX); xlabel('time (ms)'); ylabel('x location'); title('Horizontal location - filtered'); ylim([400 800]);

subplot(3,4,5)
plot(edf1_part.posY); xlabel('time (ms)'); ylabel('y location'); title('Vertical location - raw'); ylim([0 1000]);

subplot(3,4,6)
plot(downY); xlabel('time (ms)'); ylabel('y location'); title('Vertical location - filtered'); ylim([0 1000]);

subplot(3,4,9); 
plot(edf1_part.pupilSize); xlabel('time (ms)'); ylabel('pupil size'); title('Pupil dilation - raw'); ylim([500 3000]);

subplot(3,4,10); 
plot(out); xlabel('time (ms)'); ylabel('pupil size'); title('Pupil dilation - filteres'); ylim([500 3000]);

subplot(3,4,[3 4 7 8 11 12])
plot(downX,downY); xlabel('x (mm)'); ylabel('y (mm)'); title('Eye Movement Trace');


%% find individual eye movements
dx=diff(downX);
dy=diff(downY);

findXLeft = find(dx <= -0.3);
diffXLeft = diff([diff(findXLeft)==1]);
firstXLeft = findXLeft(diffXLeft>0)

findXRight = find(dx >= 0.3);
diffXRight = diff([diff(findXRight)==1]);
firstXRight = findXRight(diffXRight>0)

findYDown = find(dx <= -0.3);
diffYDown = diff([diff(findYDown)==1]);
firstYDown = findYDown(diffYDown>0)

findYUp = find(dx >= -0.3);
diffXLeft = diff([diff(findXLeft)==1]);
firstXLeft = findXLeft(diffXLeft>0)






%% find size of eye movements
% figure; plot(dx); xlabel('time (ms)'); ylabel('Slope of x')
% figure; plot(dy); xlabel('time (ms)'); ylabel('Slope of y')
eyeMovementsX_L = find(dx <= -0.3);
eyeMovementsX_R = find(dx >= 0.3);
eyeMovementsY_L = find(dy <= -0.3);
eyeMovementsY_R = find(dy >= 0.3);


%% find size of eye movements
[max_x,lmax_x] = islocalmax(x);
[max_y,lmax_y] = islocalmax(y);
[min_x,lmin_x] = islocalmin(x);
[min_y,lmin_y] = islocalmin(y);

index_x = find(max_x==1 | min_x==1);
index_y = find(max_y==1 | min_y==1);

for i= 2:length(index_x)-1
    if     x(index_x(i)) > x(index_x(i+1))
        eyeDegreesX_R(i) = x(index_x(i+1))-x(index_x(i));
    elseif x(index_x(i)) < x(index_x(i+1))
        eyeDegreesX_L(i)= x(index_x(i+1))-x(index_x(i));
    end
end 

for i= 2:length(index_y)-1
    if     x(index_y(i)) > x(index_y(i+1))
        eyeDegreesY_T(i) = x(index_y(i+1))-x(index_y(i));
    elseif x(index_y(i)) < x(index_y(i+1))
        eyeDegreesY_B(i)= x(index_y(i+1))-x(index_y(i));
    end
end 

plot(eyeDegreesX_R)

fff=1;




